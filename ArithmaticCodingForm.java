
package arithmaticcoding;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.TreeMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;


public class ArithmaticCodingForm extends javax.swing.JFrame {

    /**
     * Creates new form ArithmaticCodingForm
     */
    public ArithmaticCodingForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTcompfile = new javax.swing.JTextField();
        jTcomp = new javax.swing.JTextField();
        jBcompress = new javax.swing.JButton();
        jBdecompress = new javax.swing.JButton();
        jBexit = new javax.swing.JButton();
        jTcode = new javax.swing.JTextField();
        jTdecomptext = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTcharNum = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter text to encode");

        jLabel2.setText("Entercompressed file name ");

        jTcompfile.setText("D:/c.txt");
        jTcompfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTcompfileActionPerformed(evt);
            }
        });

        jTcomp.setText("enter text");
        jTcomp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTcompActionPerformed(evt);
            }
        });

        jBcompress.setText("compess");
        jBcompress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcompressActionPerformed(evt);
            }
        });

        jBdecompress.setText("decompress");
        jBdecompress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBdecompressActionPerformed(evt);
            }
        });

        jBexit.setText("EXIT");
        jBexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBexitActionPerformed(evt);
            }
        });

        jTcode.setText("code");

        jTdecomptext.setText("decompessed text");
        jTdecomptext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTdecomptextActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter Number of characters");

        jTcharNum.setText("enter number");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBcompress)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTcode, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTcompfile)
                            .addComponent(jTcomp)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTdecomptext, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBdecompress)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                                        .addComponent(jBexit)
                                        .addGap(13, 13, 13)))))
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(jTcharNum, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTcomp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTcompfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTcharNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTdecomptext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBcompress)
                    .addComponent(jBdecompress)
                    .addComponent(jBexit))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTcompfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTcompfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTcompfileActionPerformed

    private void jTcompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTcompActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTcompActionPerformed

    private void jTdecomptextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTdecomptextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTdecomptextActionPerformed

    public  class Character {
        public char c;
        public double lower=0.0;
        public double upper=1.0;
        
        public void setChar(char c){
            this.c=c;
        }
        
        public void setLower(double lower){
            this.lower=lower;
        }
        
        public void setUpper(double upper){
            this.upper=upper;
        }      
}
      double lower=0.0 ;
      double upper=1.0;
      double range=upper-lower;
    
    public  Vector buildDic(){
        Vector<Character> list=new Vector<>();
        Character c;
            c =new Character();
            c.c='-';
            c.setLower(0.0);
            c.setUpper(0.1);
            list.add(c);
            
             Character c1;
            c =new Character();
            c.c='a';
            c.setLower(0.1);
            c.setUpper(0.2);
            list.add(c);
            
             Character c2;
            c =new Character();
            c.c='b';
            c.setLower(0.2);
            c.setUpper(0.3);
            list.add(c);
             Character c4;
            c =new Character();
            c.c='e';
            c.setLower(0.3);
            c.setUpper(0.4);
            list.add(c);
             Character c5;
            c =new Character();
            c.c='g';
            c.setLower(0.4);
            c.setUpper(0.5);
            list.add(c);
             Character c6;
            c =new Character();
            c.c='i';
            c.setLower(0.5);
            c.setUpper(0.6);
            list.add(c);
             Character c7;
            c =new Character();
            c.c='l';
            c.setLower(0.6);
            c.setUpper(0.8);
            list.add(c);
             Character c8;
            c =new Character();
            c.c='s';
            c.setLower(0.8);
            c.setUpper(0.9);
            list.add(c);
             Character c9;
            c =new Character();
            c.c='t';
            c.setLower(0.9);
            c.setUpper(1.0);
            list.add(c);
            
            
           // for (Character d:list)System.out.println("char is "+d.c);
            // System.out.println("c-->"+c.c);
       /* for (Character C:list){
            System.out.println("-->"+C.c+" "+C.lower+" "+C.upper);
        }*/
        return list;
    }
  public  String decompress(double code,int n,Vector<Character> dic) throws IOException{
        String output="" ;
        
        
//        Character c222;
//        dic.add(c);
        FileWriter decompressedFile=new FileWriter("D:\\decompress");
        double value=code;
        while (n>0){
            for(int i=0;i<dic.size();i++){
                if (value>dic.get(i).lower && value<dic.get(i).upper){
                    double L=lower,U=upper;
                    output+=dic.get(i).c+"";
                    
                    lower=L+(range)*dic.get(i).lower;
                    upper=L+(range)*dic.get(i).upper;
                    System.out.println("c"+dic.get(i).c+"c.lower"+dic.get(i).lower+"   "+"c.upper"+dic.get(i).upper);
                   // System.out.println("L"+L);
                    range=upper-lower;
                    // System.out.println(dic.get(i)"lower"+lower+"upper"+upper+"range"+range);
                    value=(code-lower)/(range);
                    // System.out.println("value-->"+value);
                    break;
                }
            }
            n--;
        }
        decompressedFile.append(output);
        decompressedFile.close();
        return output;  
    }
  
    private void jBdecompressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBdecompressActionPerformed
       // TODO add your handling code here:
        //System.out.println("Enter compresed file name");
       // Scanner scn=new Scanner(System.in);
       
        String fileName=jTcompfile.getText();
        File file =new File(fileName);
        Scanner outFile = null;
        try {
            outFile = new Scanner (file);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ArithmaticCodingForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        double co=outFile.nextDouble();
        int n=Integer.parseInt(jTcharNum.getText());
        try {
            
            String out=decompress(co,n,buildDic());
            jTdecomptext.setText(out);
        } catch (IOException ex) {
            Logger.getLogger(ArithmaticCodingForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jBdecompressActionPerformed

    private void jBexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBexitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBexitActionPerformed

    
       
    private void jBcompressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcompressActionPerformed
      
    
    }//GEN-LAST:event_jBcompressActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArithmaticCodingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArithmaticCodingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArithmaticCodingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArithmaticCodingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ArithmaticCodingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBcompress;
    private javax.swing.JButton jBdecompress;
    private javax.swing.JButton jBexit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTcharNum;
    private javax.swing.JTextField jTcode;
    private javax.swing.JTextField jTcomp;
    private javax.swing.JTextField jTcompfile;
    private javax.swing.JTextField jTdecomptext;
    // End of variables declaration//GEN-END:variables
}

